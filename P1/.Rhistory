#lendo arquivo csv
# arq deve estar na mesma pasta
# abrir bloco de notas para verificar a sepercao dos dados
dados=read.csv('dados1.csv', sep = ',',dec='.',header = T)
View(dados)
install.packages(ggplot2)
install.packages("ggplot2")
# Carregando a biblioteca ggplot2
library(ggplot2)
# Criando o gráfico de barras agrupadas
ggplot(dados, aes(x = fabricante, y = quantidade, fill = tamanho)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(x = "Fabricante", y = "Quantidade", fill = "Tamanho") +
theme_bw()
View(dados)
# Criando o gráfico de barras agrupadas
ggplot(dados, aes(x = fabricante, y = resistencia, fill = tamanho)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(x = "Fabricante", y = "Quantidade", fill = "Tamanho") +
theme_bw()
View(dados)
# Criando o gráfico de boxplot
ggplot(dados, aes(x = fabricante, y = resistencia, fill = tamanho)) +
geom_boxplot() +
labs(x = "Fabricante", y = "Resistência", fill = "Tamanho") +
theme_bw()
# Criando o gráfico de boxplot
ggplot(dados, aes(x = fabricante, y = resistencia, fill = tamanho)) +
geom_boxplot() +
labs(x = "Fabricante", y = "Resistência", fill = "Tamanho") +
theme_dark()
# Criando o gráfico de barras agrupadas
ggplot(dados, aes(x = fabricante, y = resistencia, fill = tamanho)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(x = "Fabricante", y = "Quantidade", fill = "Tamanho") +
theme_dark()
# Criando o gráfico de barras agrupadas
ggplot(dados, aes(x = fabricante, y = resistencia, fill = tamanho)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(x = "Fabricante", y = "Quantidade", fill = "Tamanho") +
theme_dark() +  scale_fill_brewer(palette = "Dark2")
# Criando o gráfico de boxplot
ggplot(dados, aes(x = fabricante, y = resistencia, fill = tamanho)) +
geom_boxplot() +
labs(x = "Fabricante", y = "Resistência", fill = "Tamanho") +
theme_dark() +  scale_fill_brewer(palette = "Paired")
# Calculando as médias das resistências por fabricante e tamanho
medias <- aggregate(resistencia ~ fabricante + tamanho, data = dados, mean)
View(medias)
View(medias)
# Criando o gráfico de barras agrupadas
ggplot(medias, aes(x = fabricante, y = resistencia, fill = tamanho)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(x = "Fabricante", y = "Média de Resistência", fill = "Tamanho") +
theme_bw()
View(medias)
# Criando o gráfico de barras agrupadas
ggplot(dados, aes(x = fabricante, y = resistencia, fill = tamanho)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(x = "Fabricante", y = "Quantidade", fill = "Tamanho") +
theme_dark() +  scale_fill_brewer(palette = "Dark2")
# Criando o gráfico de barras agrupadas
ggplot(medias, aes(x = fabricante, y = resistencia, fill = tamanho)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(x = "Fabricante", y = "Média de Resistência", fill = "Tamanho") +
theme_bw()
#Questão 4
# Criando o gráfico de dispersão
ggplot(dados, aes(x = tempo, y = peso, color = tamanho)) +
geom_point() +
facet_wrap(~ tamanho) +
labs(x = "Tempo", y = "Peso", color = "Tamanho") +
theme_bw()
# Ajustando uma regressão linear para cada tamanho
regressoes <- list()
for (tam in unique(dados$tamanho)) {
subset <- subset(dados, tamanho == tam)
regressoes[[tam]] <- lm(peso ~ tempo, data = subset)
}
# Calculando o tempo que maximiza o peso para cada regressão
tempos_otimos <- c()
for (tam in unique(dados$tamanho)) {
regressao <- regressoes[[tam]]
tempo_otimo <- optimize(f = function(t) -predict(regressao, data.frame(tempo = t)), interval = c(0, max(dados$tempo)))$minimum
tempos_otimos <- c(tempos_otimos, tempo_otimo)
}
# Imprimindo os tempos ótimos aproximados para cada tamanho
tempos_otimos
#Questão 5
# Criando o gráfico de violino
ggplot(dados, aes(x = fabricante, y = resistencia, fill = fabricante)) +
geom_violin() +
labs(x = "Fabricante", y = "Resistência", fill = "Fabricante") +
theme_bw()
#Questão 5
# Criando o gráfico de violino
ggplot(dados, aes(x = fabricante, y = resistencia, fill = fabricante)) +
geom_violin() +
labs(x = "Fabricante", y = "Resistência", fill = "Fabricante") +
theme_minimal() + scale_fill_brewer(palette = "Paired")
#Questão 5
# Criando o gráfico de violino
ggplot(dados, aes(x = fabricante, y = resistencia, fill = fabricante)) +
geom_violin() +
labs(x = "Fabricante", y = "Resistência", fill = "Fabricante") +
theme_light() + scale_fill_brewer(palette = "Paired")
# Criando o gráfico de barras agrupadas
ggplot(dados, aes(x = fabricante, y = resistencia, fill = tamanho)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(x = "Fabricante", y = "Quantidade", fill = "Tamanho") +
theme_dark() +  scale_fill_brewer(palette = "Dark2")
# Criando o gráfico de barras agrupadas
ggplot(dados, aes(x = fabricante, y = resistencia, fill = tamanho)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(x = "Fabricante", y = "Quantidade", fill = "Tamanho") +
theme_dark() +  scale_fill_brewer(palette = "Dark2")
# Criando o gráfico de barras agrupadas
ggplot(dados, aes(x = fabricante, y = resistencia, fill = tamanho)) +
geom_bar() +labs(x = "Fabricante", y = "Quantidade", fill = "Tamanho") +
theme_dark() +  scale_fill_brewer(palette = "Dark2")
ggplot(dados,aes(x =fabricante,fill=tamanho)) +geom_bar()+
scale_fill_brewer(palette="Set3")+theme_dark()
ggplot(dados,aes(x =fabricante,fill=tamanho)) +geom_bar()+
labs(x = "Fabricante", y = "Quantidade", fill = "Tamanho") +
scale_fill_brewer(palette="Set3")+theme_dark()
ggplot(dados,aes(x =fabricante,fill=tamanho)) +geom_bar()+
labs(x = "Fabricante", y = "Quantidade", fill = "Tamanho") +
scale_fill_brewer(palette="Set6")+theme_dark()
ggplot(dados,aes(x =fabricante,fill=tamanho)) +geom_bar()+
labs(x = "Fabricante", y = "Quantidade", fill = "Tamanho") +
scale_fill_brewer(palette="Set6")+theme_light()
ggplot(dados,aes(x =fabricante,fill=tamanho)) +geom_bar()+
labs(x = "Fabricante", y = "Quantidade", fill = "Tamanho") +
scale_fill_brewer(palette="Set6")+theme_linedraw()
ggplot(dados,aes(x =fabricante,fill=tamanho)) +geom_bar()+
labs(x = "Fabricante", y = "Quantidade", fill = "Tamanho") +
scale_fill_brewer(palette="Set6")+theme_replace()
ggplot(dados,aes(x =fabricante,fill=tamanho)) +geom_bar()+
labs(x = "Fabricante", y = "Quantidade", fill = "Tamanho") +
scale_fill_brewer(palette="Set6")+theme_minimal()
ggplot(dados,aes(x =fabricante,fill=tamanho)) +geom_bar()+
labs(x = "Fabricante", y = "Quantidade", fill = "Tamanho") +
scale_fill_brewer(palette="Set6")+theme_dark()
# Criando o gráfico de boxplot
ggplot(dados, aes(x = fabricante, y = resistencia, fill = tamanho)) +
geom_boxplot() +
labs(x = "Fabricante", y = "Resistência", fill = "Tamanho") +
theme_dark() +  scale_fill_brewer(palette = "Paired")
# Criando o gráfico de boxplot
ggplot(dados, aes(x = fabricante, y = resistencia, fill = tamanho)) +
geom_boxplot() +labs(x = "Fabricante", y = "Resistência", fill = "Tamanho") +
theme_dark() +  scale_fill_brewer(palette = "Paired")
# Calculando as médias das resistências por fabricante e tamanho
medias <- aggregate(resistencia ~ fabricante + tamanho, data = dados, mean)
# Criando o gráfico de barras agrupadas
ggplot(medias, aes(x = fabricante, y = resistencia, fill = tamanho)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(x = "Fabricante", y = "Média de Resistência", fill = "Tamanho") +
theme_bw()
# Criando o gráfico de barras agrupadas
ggplot(medias, aes(x = fabricante, y = resistencia, fill = tamanho)) +
geom_bar() +labs(x = "Fabricante", y = "Média de Resistência", fill = "Tamanho") +
theme_bw()
# Criando o gráfico de barras agrupadas
ggplot(medias, aes(x = fabricante, fill = tamanho)) +
geom_bar() +labs(x = "Fabricante", y = "Média de Resistência", fill = "Tamanho") +
theme_bw()
View(medias)
# Criando o gráfico de barras agrupadas
ggplot(medias, aes(x = fabricante, y = resistencia, fill = tamanho)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(x = "Fabricante", y = "Média de Resistência", fill = "Tamanho") +
theme_bw()
View(dados)
View(dados)
# Criando o gráfico de barras agrupadas
ggplot(medias, aes(x = fabricante, y = resistencia, fill = tamanho)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(x = "Fabricante", y = "Média de Resistência", fill = "Tamanho") +
theme_get()
(
(
#Questão 5
# Criando o gráfico de violino
ggplot(dados, aes(x = fabricante, y = resistencia, fill = fabricante)) +
geom_violin() +
labs(x = "Fabricante", y = "Resistência", fill = "Fabricante") +
theme_light() + scale_fill_brewer(palette = "Paired")
#Questão 5
# Criando o gráfico de violino
ggplot(dados, aes(x = fabricante, y = resistencia, fill = fabricante)) +
#Questão 5
# Criando o gráfico de violino
ggplot(dados, aes(x = fabricante, y = resistencia, fill = fabricante)) +
geom_violin() +
labs(x = "Fabricante", y = "Resistência", fill = "Fabricante") +
theme_light() + scale_fill_brewer(palette = "Paired")
#Questão 4
# Criando o gráfico de dispersão
ggplot(dados, aes(x = tempo, y = peso, color = tamanho)) +
geom_point() +
facet_wrap(~ tamanho) +
labs(x = "Tempo", y = "Peso", color = "Tamanho") +
theme_bw()
#Questão 4
# Criando o gráfico de dispersão
ggplot(dados, aes(x = tempo, y = peso, color = tamanho)) +
geom_point() +
facet_wrap(~ tamanho) +
labs(x = "Tempo", y = "Peso", color = "Tamanho") +
theme_dark()
# Calculando as médias das resistências por fabricante e tamanho
medias <- aggregate(resistencia ~ fabricante + tamanho, data = dados, mean)
# Criando o gráfico de barras agrupadas
ggplot(medias, aes(x = fabricante, y = resistencia, fill = tamanho)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(x = "Fabricante", y = "Média de Resistência", fill = "Tamanho") +
theme_get()
# Criando o gráfico de barras agrupadas
ggplot(medias, aes(x = fabricante, y = resistencia, fill = tamanho)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(x = "Fabricante", y = "Média de Resistência", fill = "Tamanho") +
theme_get()  + scale_fill_brewer(palette = "Paired")
load("C:/Users/deivi/OneDrive/Área de Trabalho/UTFPR/4 periodo/Probabilidade-e-Estatistica/P1/.RData")
#P1
#Deivid da silva galvao
#Questão 1
#lendo arquivo csv
# arq deve estar na mesma pasta
# abrir bloco de notas para verificar a sepercao dos dados
dados=read.csv('dados1.csv', sep = ',',dec='.',header = T)
install.packages("ggplot2")
# Carregando a biblioteca ggplot2
library(ggplot2)
# Criando o gráfico de barras agrupadas
ggplot(dados, aes(x = fabricante, y = resistencia, fill = tamanho)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(x = "Fabricante", y = "Quantidade", fill = "Tamanho") +
theme_dark() +  scale_fill_brewer(palette = "Dark2")
ggplot(dados,aes(x =fabricante,fill=tamanho)) +geom_bar()+
labs(x = "Fabricante", y = "Quantidade", fill = "Tamanho") +
scale_fill_brewer(palette="Set6")+theme_dark()
#Questão 2
# Carregando a biblioteca ggplot2
library(ggplot2)
# Criando o gráfico de boxplot
ggplot(dados, aes(x = fabricante, y = resistencia, fill = tamanho)) +
geom_boxplot() +labs(x = "Fabricante", y = "Resistência", fill = "Tamanho") +
theme_dark() +  scale_fill_brewer(palette = "Paired")
# Questão 3
# Calculando as médias das resistências por fabricante e tamanho
medias <- aggregate(resistencia ~ fabricante + tamanho, data = dados, mean)
# Criando o gráfico de barras agrupadas
ggplot(medias, aes(x = fabricante, y = resistencia, fill = tamanho)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(x = "Fabricante", y = "Média de Resistência", fill = "Tamanho") +
theme_get()  + scale_fill_brewer(palette = "Paired")
#Questão 4
# Criando o gráfico de dispersão
ggplot(dados, aes(x = tempo, y = peso, color = tamanho)) +
geom_point() +
facet_wrap(~ tamanho) +
labs(x = "Tempo", y = "Peso", color = "Tamanho") +
theme_dark()
#Questão 5
# Criando o gráfico de violino
ggplot(dados, aes(x = fabricante, y = resistencia, fill = fabricante)) +
geom_violin() +
labs(x = "Fabricante", y = "Resistência", fill = "Fabricante") +
theme_light() + scale_fill_brewer(palette = "Paired")
library(ggplot2)
# Transforma a matriz em um data frame
media_resistencias_df <- as.data.frame(media_resistencias)
